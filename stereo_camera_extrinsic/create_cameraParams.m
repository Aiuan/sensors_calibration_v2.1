function cameraParams = create_cameraParams(imagePoints, worldPoints, intrinsics)
    worldUnits = 'millimeters';

    numImages = size(imagePoints, 3);
    rotationVectors = zeros(3, numImages);
    translationVectors = zeros(3, numImages);
    imagesUsed = true(numImages, 1);
    A = intrinsics.IntrinsicMatrix;

    for i = 1:numImages
        try
            [R, t] = vision.internal.calibration.extrinsicsPlanar(...
                    imagePoints(:,:,i), worldPoints, A');
            rotationVectors(:, i) = vision.internal.calibration.rodriguesMatrixToVector(R);    
            translationVectors(:, i) = t;
        catch
            imagesUsed(i) = false;
        end
    end

    rotationVectors = rotationVectors';
    translationVectors = translationVectors';

    cameraParams = cameraParameters(...
        'IntrinsicMatrix', intrinsics.IntrinsicMatrix, ...
        'RotationVectors', rotationVectors(imagesUsed, :), ...
        'TranslationVectors', translationVectors(imagesUsed, :), ...
        'WorldPoints', worldPoints, ...
        'WorldUnits', worldUnits, ...
        'EstimateSkew', (intrinsics.Skew ~= 0),...
        'NumRadialDistortionCoefficients', numel(intrinsics.RadialDistortion),...
        'RadialDistortion', intrinsics.RadialDistortion,...
        'EstimateTangentialDistortion', ~isempty(intrinsics.TangentialDistortion),...
        'TangentialDistortion', intrinsics.TangentialDistortion, ...
        'ImageSize', intrinsics.ImageSize);
end